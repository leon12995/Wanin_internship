var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Direction;
(function (Direction) {
    Direction[Direction["Left"] = 37] = "Left";
    Direction[Direction["Up"] = 38] = "Up";
    Direction[Direction["Right"] = 39] = "Right";
    Direction[Direction["Down"] = 40] = "Down";
})(Direction = exports.Direction || (exports.Direction = {}));
},{}],2:[function(require,module,exports){
"use strict";
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
Object.defineProperty(exports, "__esModule", { value: true });
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Direction_1 = require("./Direction");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
        Laya.stage.on(Laya.Event.KEY_UP, this, function (event) {
            var code = event.which || event.keyCode;
            switch (code) {
                case Direction_1.Direction.Left:
                    console.log("Move Left");
                    break;
                case Direction_1.Direction.Up:
                    console.log("Move Up");
                    break;
                case Direction_1.Direction.Right:
                    console.log("Move Right");
                    break;
                case Direction_1.Direction.Down:
                    console.log("Move Down");
                    break;
            }
        });
        // let airAvengers: FlyingObject[] =[];
        // airAvengers.push(new Thor());
        // airAvengers.push(new IronMan("Tony"));
        // airAvengers.push(new CaptainAmerica());		
        // airAvengers.forEach((airAvenger: FlyingObject)=>{
        //  console.log(airAvenger.fly());
        // });
        // let ironman : IronMan = new IronMan("Tony");
        // console.log(ironman.sayHi());
        // let hulk: HulkBuster = new HulkBuster("Banner")
        // console.log(hulk.sayHi());
        // // hulk.m_Name = "Panner";
        // console.log(hulk.sayHi());
        // let isStudent: boolean =  false;
        // let aNumber : number = 9;
        // let notANumber : number = NaN;
        // let anInfiniteNumber : number = Infinity;
        // let aString: any  ="I am a string";
        // console.log("aNumber is a number: " +isNaN(aNumber));
        // console.log("aString is a string: " +isNaN(aString));
        // console.log("anInfinityNumber value: " +isNaN(anInfiniteNumber));
        // let aString : string = "Curry";
        // let greeting: string = "Hello my name is " + aString;
        // console.log( greeting + aString );
        // let isDownload = this.isDownload();
        // let u: undefined = undefined;
        // let n: null = null;
        // console.log("typeof u : " + typeof(u));
        // console.log("typeof n : " + typeof(n));
        //任何型態陣列
        var anArray = ["A", 1];
        //字串型態陣列
        var aStringArray = ["A", "B", "C", "D"];
        //數字型態陣列
        // let aNumberArray: number[] = [100,200,300,400];
        // let Number99: number[][] = [];
        // let row: number = 9;
        // let column: number = 9;
        // for(let i = 1; i<=column; i++){
        // 	Number99.push([]);			
        // 	for(let s = 1; s<=row;s++){
        // 		Number99[i-1][s-1]= i*s;
        // 	}
        // }
        // console.log(Number99);
        //刪除兩個元素
        // aNumberArray.splice(1,2);
        // console.log(aNumberArray);
        //新增一個元素到100跟200之間
        // aNumberArray.splice(1,0, 150);
        // console.log(aNumberArray);
        // let aNewArray: number[] = aNumberArray.slice(1,3);
        // console.log(aNewArray);
        // let index: number  = aStringArray.indexOf("B");
        // console.log(index);
        // let aNumber: number = aNumberArray[0];
        // aNumberArray.push(500);
        // console.log(aNumberArray);
        // aNumberArray.pop();
        // console.log(aNumberArray);
        // aNumberArray.unshift(0);
        // console.log("unshift " + aNumberArray );
        //forEach
        // aNumberArray.forEach((aNumber: number)=>{
        // 	console.log(aNumber);
        // })
        //for ...of
        // for(let aNumber of aNumberArray){
        // 	console.log(aNumber);
        // }
        // for (let i = aNumberArray.length; i>-1 ;i--){
        // 	console.log("index: " +i+ "number = "+ aNumberArray[i]);
        // }
        // let answer:number =this.sum(1,2);
        // this.printName("Chen");
        // this.printName("Cheng","Dr.");
        // this.printFamily("John","Mary","Leon","Brain","Joe");
    };
    // public isDownload(): boolean {
    // 	return true;
    // }
    // public  print() : void{
    // 	console.log("Log!!!");
    // }
    // printName(surname:string, title:string ="Mr."):void{
    // 	console.log("Hi " +(title? title:"") + surname)
    // }
    //函式
    Main.prototype.sum = function (x, y) {
        return x + y;
    };
    Main.prototype.printFamily = function (father, mother) {
        var children = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            children[_i - 2] = arguments[_i];
        }
        console.log(father);
        console.log(mother);
        if (children) {
            children.forEach(function (child) {
                console.log(child);
            });
            if (children.length === 0) {
                console.log("No child");
            }
        }
    };
    return Main;
}());
//激活启动类
new Main();
},{"./Direction":1,"./GameConfig":2}]},{},[3])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
