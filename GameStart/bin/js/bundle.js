var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var Game_1 = require("./scripts/Game");
var GameStart_1 = require("./scripts/GameStart");
var Practice_1 = require("./scripts/Practice");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("scripts/Game.ts", Game_1.default);
        reg("scripts/GameStart.ts", GameStart_1.default);
        reg("scripts/Practice.ts", Practice_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "showall";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "20200806.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./scripts/Game":4,"./scripts/GameStart":5,"./scripts/Practice":6}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var MouseMove_1 = require("./MouseMove");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
        Laya.stage.on(Laya.Event.CLICK, this, this.onClick);
        Laya.stage.on(Laya.Event.DOUBLE_CLICK, this, this.onDoubleClick);
        Laya.stage.on(Laya.Event.RIGHT_CLICK, this, this.onRightClick);
        var mousemove = new MouseMove_1.MouseMove();
    };
    Main.prototype.onClick = function (event) {
        console.log("Event type: " + event.type);
    };
    Main.prototype.onDoubleClick = function (event) {
        console.log("Event type: " + event.type);
    };
    Main.prototype.onRightClick = function (event) {
        console.log("Event type: " + event.type);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./MouseMove":3}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MouseMove = /** @class */ (function () {
    function MouseMove() {
        var label = new Laya.Label("LABEL");
        label.bgColor = "#FF0000";
        label.fontSize = 30;
        label.size(100, 32);
        label.centerX = 0;
        label.centerY = 0;
        label.on(Laya.Event.MOUSE_OVER, this, this.onMouseOver);
        label.on(Laya.Event.MOUSE_MOVE, this, this.onMouseMove);
        label.on(Laya.Event.MOUSE_OUT, this, this.onMouseOUT);
        Laya.stage.addChild(label);
    }
    MouseMove.prototype.onMouseOver = function (event) {
        console.log("MouseEvent: " + event.type);
    };
    MouseMove.prototype.onMouseMove = function (event) {
        console.log("MouseEvent: " + event.type);
    };
    MouseMove.prototype.onMouseOUT = function (event) {
        console.log("MouseEvent: " + event.type);
    };
    return MouseMove;
}());
exports.MouseMove = MouseMove;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Game = /** @class */ (function (_super) {
    __extends(Game, _super);
    function Game() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Game.prototype.onAwake = function () {
        var button = this.owner.getChildByName("button");
        button.on(Laya.Event.CLICK, this, this.onButtonClick, ["materials/music02.mp3"]);
    };
    Game.prototype.onButtonClick = function (soundPath) {
        Laya.SoundManager.playMusic(soundPath);
    };
    return Game;
}(Laya.Script));
exports.default = Game;
},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameStart = /** @class */ (function (_super) {
    __extends(GameStart, _super);
    function GameStart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GameStart.prototype.onAwake = function () {
        // let button: Laya.Button = this.owner.getChildByName("btnGameStart") as Laya.Button;
        // button.visible = true;
        // button.on(Laya.Event.CLICK, this,()=>{
        //     alert("clicked");
        // })
        // let image: Laya.Image = this.owner.getChildByName("imgStar") as Laya.Image;
        // Laya.timer.once(2000, this, ()=>{
        //     image.skin = "comp/button.png";
        // });
        // let comboBox: Laya.ComboBox = this.owner.getChildByName("cboTest") as Laya.ComboBox;
        // comboBox.selectHandler = new Laya.Handler(this, this.onComBoxSelect, [comboBox]);
        // let textInput: Laya.TextInput = this.owner.getChildByName("txtTest") as Laya.TextInput;
        // textInput.on(Laya.Event.KEY_UP, this, this.onTextInputChanged);
        // let List: Laya.List = this.owner.getChildByName("listTest") as Laya.List;
        // List.dataSource = [1,2,3,4];
        var progressbar = this.owner.getChildByName("pbTest");
        var value = 0;
        progressbar.value = 0;
        Laya.timer.frameLoop(1, this, function () {
            value += 0.01;
            progressbar.value = value;
        });
    };
    return GameStart;
}(Laya.Script));
exports.default = GameStart;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Practice = /** @class */ (function (_super) {
    __extends(Practice, _super);
    function Practice() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Practice.prototype.onAwake = function () {
        var button = this.owner.getChildByName("StartBTN");
        button.visible = true;
        button.on(Laya.Event.CLICK, this, function () {
            alert("GAMESTART");
        });
    };
    return Practice;
}(Laya.Script));
exports.default = Practice;
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
